   Melihat masalah tersebut, penulis memberikan solusi dengan membuat sebuah aplikasi yang dapat mendeteksi kata typo dalam laporan. Aplikasi ini akan melakukan pengecekan dari teks atau dokumen yang dipilih, jika ditemukan kata  baru, setiap kata tersebut akan disimpan dalam dataset dan jika terjadi kesalahan pendeteksian, pengguna bisa memberikan koreksi sehingga pada pendeteksian selanjutnya kata yang sama sudah dikenali dan bisa menghasilkan  hasil deteksi  lebih baik. 
	Q-Learning adalah salah satu metode reiforement learning yang cara kerjanya menggunakan sistem trial dan error, dimana aplikasi akan melakukan
perubahan lingkungan berdasarkan aksi yang kita berikan yaitu dengan memberikan koreksi. Metode Q-Learning belajar berdasarkan reward yang diberikan berdasarkan aksinya. Q-Learning akan mencari nilai Q tertinggi pada  setiap episodenya. [1] Algoritma ini sering digunakan pada game dan robot, seperti pada penelitian Pencarian Rute Line Follower Mobile Robot Pada Maze [1], Q-Learning digunakan untuk menemukan rute yang tepat. Pada game, metode Q-Learning dapat digunakan untuk menggerakkan seekor burung pada game Flappy Bird [2]. Melihat dari beberapa penelitian tersebut, Q-Learning dipilih karena metode ini cukup sederhana dan bisa dilakukan pendekatan untuk  diterapkan pada aplikasi yang akan dibuat. Seperti pada pencarian rute maze dan  game Flappy Bird, pengecekan kata akan menggunakan kata yang memiliki nilai Q tertinggi, tetapi yang berbeda dari penelitian diatas, lingkungan dari aplikasi  ini bergantung pada koreksi yang diberikan pengguna. Setiap ada kesalahan dalam pengecekan akan diberikan punishment sehingga dengan value yang semakin kecil hasil yang salah tersebut tidak akan ditampilkan lagi tapi jika tidak diberikan koreksi maka hasil tersebut akan diberikan reward dan kata yang memiliki value tertinggi akan menjadi hasil pada pengecekan selanjutnya. Pada penelitian sejenis, pengecekan kata typo menggunakan metode N-Gram dan Levenshtein Distance [3]. Metode tersebut dapat diterapkan dengan baik tapi hanya sebatas untuk identifikasi kata berdasarkan kandidat kata yang sudah diketahui terlebih dahulu, sedangkan untuk aplikasi yang akan dibuat diharapkan untuk bisa belajar sendiri berdasarkan data yang dikumpul. Untuk bahasa pemrograman dipilih bahasa pemrograman Python. Alasan utama menggunakan Python [4] karena bahasa ini tersedia secara terbuka (open source) dan multi-platform sehingga bisa dijalankan pada banyak sistem operasi seperti Windows, Linux dan MacOS. Selain itu, Python merupakan bahasa pemrograman yang fleksibel dan tersedia banyak pustaka. Python dapat memudahkan pembuatan aplikasi ini terlebih karena Python memiliki pustaka yang dapat digunakan untuk membangun aplikasi berbasis web. 
	Dengan ini, aplikasi yang akan dibuat dapat membantu untuk mengurangi kesalahan dalam penulisan laporan khususnya pada Laporan KP dan TA mahasiswa Fakultas Teknik di Universitas Katolik De La Salle (Unika De La Salle) Manado.                     